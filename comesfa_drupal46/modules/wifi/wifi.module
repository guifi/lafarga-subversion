<?php
include_once "GeoCalc.class.php";
include_once "loadnodes.php";
include_once "networkutils.php";

function wifi_menu($may_cache) {
   $items = array();

   if ($may_cache) {
    $items[] = array('path' => 'wifi', 'title' => t("base de dades de guifi.net"), 'callback' => 'wifi_page', 'access' => user_access('access content'), 'type' => 'MENU_SUGGESTED_ITEM');
    $items[] = array('path' => 'node/add/wifi', 'title' => t('wifi'),
      'access' => user_access('edit wifi database'));

   }
   else {
    if (arg(0) == 'node' && is_numeric(arg(1))) {
      $node = node_load(array('nid' => arg(1)));
      if (($node->nid) && ($node->type == 'wifi')) {
        $items[] = array('path' => 'node/'. arg(1) .'/radios', 'title' => t('radios'),
          'callback' => 'wifi_radios_page', 'access' => user_access('access content'),
          'type' => MENU_LOCAL_TASK, 'weight' => 2);
        $items[] = array('path' => 'node/'. arg(1) .'/radios/add', 'title' => t('add radio'),
          'callback' => 'wifi_radio_add', 'access' => user_access('edit wifi database'),
          'type' => MENU_LOCAL_TASK, 'weight' => 1);
        $items[] = array('path' => 'node/'. arg(1) .'/links', 'title' => t('links'),
          'callback' => 'wifi_links_page', 'access' => user_access('access content'),
          'type' => MENU_LOCAL_TASK, 'weight' => 2);
        $items[] = array('path' => 'node/'. arg(1) .'/links/add', 'title' => t('add link'),
          'callback' => 'wifi_link_add', 'access' => user_access('edit wifi database'),
          'type' => MENU_LOCAL_TASK, 'weight' => 1);
      }
    }

   }
   $style = '<style type="text/css" media="all">@import "modules/wifi/wifi.css";</style>';
   drupal_set_html_head($style);
   return $items ? $items : array();
}


function wifi_help($section = "admin/help#wifi") {
  switch ($section) {
    case "admin/help#wifi":
      return t("<p>The wifi module provides foundation for managing a wireless network.</p>");

    case "admin/modules#description":
      return t("Manage a wifi network");

    case 'node/add#wifi':
      return t("A wifi hotspot.");

      break;
  }
}


function wifi_system($field){
  $system["description"] = t("Base de dades de guifi.net.");
  return $system[$field];
}


function wifi_link($type, $node = 0) {
  $links = array();

  if ($type == 'page' && user_access('access content')) {
    $links[] = l(t('wifi hotspots'), 'wifi');
  }

  // Node links for a wifi hot spot
  if ($type == "node" && $node->type == "wifi") {
//    $links[] = l('view hotspot details', "wifi/node/$node->nid", NULL );
//    $links[] = l('view radios', "node/$node->nid" ."/radios", NULL );
//    $links[] = l('view links', "node/$node->nid" ."/links", NULL );
    if ($node->lat && $node->lon) {
      $links[] = l(t('view distances with neighbours'), "wifi/distances/$node->nid", NULL );
      $links[] = '<a href="http://www.mapquest.com/maps/map.adp?latlongtype=decimal&latitude=' .$node->lat .'&longitude=' .$node->lon .'">' .t('display location on map (mapquest)') .'</a>';
    }

  }

  return $links;
}

//function wifi_link($type, $node = 0, $main = 0) {

//  $links = array();

//  if (user_access("edit wifi database")) {
//       $links[] = l(t("edit wifi database"), "http://www.comesfa.org/ddbk/guifi/index.php", array("title" => t("Modificar la base de dades.")));
//  }
//  $links[] = l(t("afegir dades"), "http://www.comesfa.org/ddbk/guifi/index.php", array("title" => t("Insertar registres nous a la base de dades.")));

//  return $links;
//}


function wifi_perm() {
  return array("edit wifi database", "modificar estructura");
}

function wifi_node_distances($nid) {

    $node = node_load(array('nid' => $nid));
    $output = _wifi_node_view($node);

    // deso la lat/lon d'origen
    $lat1 = $node->lat;
    $long1 = $node->lon;

    // Vaig a llistar els nodes i la calcular la distància
    $result = db_query("SELECT * FROM {wifi_location} WHERE nid != '%d'",$nid);

    $oGC = new GeoCalc();
    $distances[] = NULL;
    $rows[] = NULL;
    $count = 0;
    $totals[] = NULL;

    while ($row = db_fetch_array($result)) {

       // Calculo la distancia, només llista si es < 100 qms.
       $distances[$count] = round($oGC->EllipsoidDistance($lat1, $long1, $row["lat"], $row["lon"]),3);
       $rows[$count] = $row;
       $count++;
    }
    asort($distances);
    reset($distances);

    $output .= "<br>\n<h2>" .t("Report of distances to other locations, from closest to farest, limited at ") .variable_get('wifi_max_distance',25) ." " .t("Kms.") ."</h2><table>";
    $output .= "<tr><th>" .t("Site") ."</th><th>" .t("Kms.") ."</th><th>" .t("degrees") ."</th><th>" .t("Direction") ."</th><th>" .t("Status") ."</th><th>" .t("Location") ."</th></tr>";
    $count = 0;
    while ((list($key, $val) = each($distances)) && $distances[$key] < variable_get('wifi_max_distance',25)) {
         if ($count % 2)
          $output .= "\n<tr class=\"dark\" >";
         else
          $output .= "\n<tr class=\"light\">";
	 $count++;
         $output .= "<td class=\"nodename\"><a href=/node/" .$rows[$key]["nid"] .">" .$rows[$key]["nick"] ."</td>"; 
         $output .= "<td class=\"distance\">" .$distances[$key] ."</td>"; 
         $dAz = round($oGC->GCAzimuth($lat1, $long1, $rows[$key]["lat"], $rows[$key]["lon"]));
         $output .= "<td class=\"azimuth\">" .$dAz ."</td>"; 
         // Calculo orientació
         if ($dAz < 23) $dOr =t("North"); else
         if ($dAz < 68) $dOr =t("North East"); else
         if ($dAz < 113) $dOr =t("East"); else
         if ($dAz < 158) $dOr =t("South East"); else
         if ($dAz < 203) $dOr =t("South"); else
         if ($dAz < 248) $dOr =t("South West"); else
         if ($dAz < 293) $dOr =t("West"); else
         if ($dAz < 338) $dOr =t("North West"); else
          $dOr =t("North");
         $output .= "<td class=\"orientation\">" .$dOr ."</td>"; 
         $output .=  _wifi_state_class($rows[$key]["state"]) .t($rows[$key]["state"]) ."</td>";
         $poblacio = array();
         foreach (taxonomy_node_get_terms_by_vocabulary($rows[$key]["nid"],variable_get('wifi_vocabulary',0)) as $term) {
             $poblacio[] .= l($term->name, 'taxonomy/term/'. $term->tid);
             foreach (taxonomy_get_parents($term->tid) as $parent) {
                $poblacio[] .= l($parent->name, 'taxonomy/term/'. $parent->tid ."/all");
             }
           }
         $output .= "<td class=\"nodename\">" .implode($poblacio,", ") ."</td>"; 
         $output .= "</tr>";
         $totals[$rows[$key]["state"]]++;
         $totals[0]++;
     }
     // Totals:
     $output .= "<tr><td>&nbsp;</td></tr><tr><td class=\"poblacio\">Totals:</td><td class=\"poblacio\">" .$totals[0] ."</td></tr>";
     asort($totals);
     reset($totals);
     while (list($key, $val) = each($totals)) {
       if ($key)
         $output .= "<tr>" ._wifi_state_class($key) .t($key) ."</td>" 
                  ._wifi_state_class($key) .$totals[$key] ."</td></tr>\n";
     }
    $output .= "</table>";

    
    return $output;
}

function wifi_node_details($lid) {
    $output = "";

    if (strcmp(substr($lid,0,4),"Node") == 0) {
	$resnode = db_query("SELECT lid from {wifi_location}  where nick = '" .substr($lid,4) ."'");
        $rownode = db_fetch_array($resnode);
        $lid = $rownode["lid"];
    }
    $resnid = db_query("SELECT nid FROM {wifi_location} WHERE lid='%d'", $lid);
    $row = db_fetch_array($resnid);
    $node = node_load(array('nid' => $row["nid"]));
    $output = _wifi_node_view($node);
    return $output;
}

function wifi_radio_details($rid) {
    $output = "";

    $result = db_query("SELECT  r.*, m.model, f.nom manufacterer, m.mid, r.state  "
			."FROM {wifi_radio} r, guifi_model m, guifi_manufacturer f "
			."WHERE r.mid = m.mid AND "
		        ."      f.fid = m.fid AND "
		        ."      r.rid = " .$rid);
    $radio = db_fetch_array($result);
    $output = wifi_radio_view($radio);
    if (user_access('edit wifi database')) {
	$output .= "<form method=get name=\"radio form edit\" action=\"wifi/radios/" .$rid ."/edit\">";
	$output .= form_hidden('rid',$rid);
	$output .= form_button(t('Edit'),'Submit');
 	$output .= "</form>";
    }
    return $output;
}


function wifi_list_radios($nid = 0) {
    $output = "<div id=wifi>";

    $tree = taxonomy_get_tree(variable_get('wifi_vocabulary',0));

    $rownum = 0;
    $totals[] = NULL;
    $current_tid = 0;
    $current_nid = 0;
    $print_location_terms = 0;

    $output .= "<table>";
    foreach ($tree as $term) {
       $term->count = taxonomy_term_count_nodes($term->tid);

       // List only those who have nodes
       if ($term->count == 0)
	continue;
       else {
         $querycount = db_query("SELECT count(*) count FROM {term_node} t, {wifi_radio} l WHERE l.nid=t.nid AND tid='%d'",$term->tid);
	 $rescount = db_fetch_array($querycount);
         if (($rescount["count"] == 0) && ($term->depth != 0))
	  continue;
       }

       // tid geography has changed ??
       if ($current_tid <> $term->tid) {
           if ($term->depth == 0) {
             $term_row = "\n<!--" .$term->name ."--><tr><td>&nbsp;</td></tr><tr><td class=\"comarca\">" .$term->name ."</td></tr>\n";
           } else {
             $term_row .= "\n<!--" .$term->name ."--><tr><td class=\"poblacio\">" .$term->name ."</td></tr>";
           }
           $current_tid = $term->tid;
           $print_location_terms = 1;
       } // if tid geography has changed

       // going a list the nodes
       $resnids = db_query("SELECT r.rid, r.ip, r.nid, r.lid, r.title, r.sponsor, r.state, r.mode, l.nick, r.channel, r.firmware  from {term_node} t, {wifi_location} l, {wifi_radio} r  where tid = '%d' AND t.nid = l.nid AND l.nid = r.nid ORDER BY l.nick",$term->tid);
       while ($row = db_fetch_array($resnids)) {
           if (($nid) && ($nid != $row["nid"]))
              continue;

           // has been printed the location terms?
           if (($print_location_terms) && ($nid == 0)) {
              $output .= $term_row;
	      $term_row = "";
              $print_location_terms = 0;
           }

           // node has changed?
           if ($curr_nid <> $row["nid"]) {
             $curr_nid = $row["nid"];
             $output .= "\n<!--" .$row["nick"] ."--><tr>";
             $output .= "<tr>";
             $output .= "<td colspan=\"4\" class=\"localization\">Node: <a href=/node/" 
	        .$row["nid"] ." title=\"veure detalls de la localització\">"
                .$row["nick"] ."</a></td><tr/>";
           } // node has changed

           if ($rownum % 2)
            $output .= "\n<tr class=\"dark\" >";
           else
            $output .= "\n<tr class=\"light\">";
           $rownum++;
           $output .= "<td class=\"radio\"><a href=/wifi/radios/" .$row["rid"] ." title=\"veure detalls de la ràdio\">" .$row["title"] ."</a></td>";
           $output .= "<td class=\"mode\">" .$row["ip"] ."<td/>";
           $output .= "<td class=\"mode\">" .$row["mode"] ."<td/>";
           $output .= "<td class=\"mode\">" .$row["channel"] ."<td/>";
           $output .= "<td class=\"padri\">" .$row["sponsor"] ."<td/>";
           $output .=  _wifi_state_class($row["state"]) .t($row["state"]) ."<td/>";
             
           $output .= _wifi_ip_availability($row["ip"]);

           if ((user_access('edit wifi database')) && ($nid)) {
		$output .= "<td><form method=get name=\"radio form edit\" action=\"wifi/radios/" .$row["rid"] ."/edit\">";
		$output .= form_hidden('rid',$row["rid"]);
		$output .= form_button(t('Edit'),'Submit');
 		$output .= "</form><td/>";

		$output .= l(t('add link'),'wifi/links/' .$row["rid"] .'/add');

		if ($row["firmware"] != "n/d") {
		  $output .= '<td><a href="wifi/unsolclic/' .$row["rid"] .'" title="' .t("Get radio configuration with singleclick") .'">' .$row["firmware"] .'</a></td>';
		}
           }
           $totals[ $row["state"] ]++; 
           $totals[ 0 ]++; 
           $output .= "</tr>";
       } // end while there are radios
    } //foreach

    $output .= "<tr><td>&nbsp;</td></tr><tr>";
    // Totals:
    if ($totals[0] == NULL)
      $output .= "<td class=\"poblacio\">" .t('There are no radios to report') ."</td></tr>";
    else {
      $output .= "<td>&nbsp;</td></tr><tr><td class=\"poblacio\">Totals:</td><td class=\"poblacio\">" .$totals[0] ."</td></tr>";
      asort($totals);
      reset($totals);
      while (list($key, $val) = each($totals)) {
         if ($key)
           $output .= "<tr>" ._wifi_state_class($key) .t($key) ."</td>" 
                    ._wifi_state_class($key) .$totals[$key] ."</td></tr>\n";
      }
    }
    $output .= "\n</table>";
   
    return "<h2>" .t('List of radios') ."</h2>" .$output ."</div>";
}


function wifi_list_availability($nid = 0) {
    $tree = taxonomy_get_tree(variable_get('wifi_vocabulary',0));
    $output = "<div id=wifi>";
    if ((user_access('edit wifi database')) && ($nid)) {
	$output .= l(t('add radio'),'node/' .$nid .'/radios/add');
    }
    if ($nid == 0)
    	$output .= "<hr><a id=top></a><h2>Zones:</h2>" ._wifi_list_zones($tree,"/wifi/radios");

    $rownum = 0;
    $totals[] = NULL;
    $current_tid = 0;
    $current_nid = 0;
    $print_location_terms = 0;

    $output .= "<table>";
    foreach ($tree as $term) {
       $term->count = taxonomy_term_count_nodes($term->tid);

       // List only those who have nodes
       if ($term->count == 0)
	continue;
       else {
         $querycount = db_query("SELECT count(*) count FROM {term_node} t, {wifi_radio} l WHERE l.nid=t.nid AND tid='%d'",$term->tid);
	 $rescount = db_fetch_array($querycount);
         if (($rescount["count"] == 0) && ($term->depth != 0))
	  continue;
       }

       // tid geography has changed ??
       if ($current_tid <> $term->tid) {
           if ($term->depth == 0) {
             $term_row = "\n<!--" .$term->name ."--><tr><td><a id=tid-" .$term->tid ."></a>&nbsp;</td></tr><tr><td class=\"comarca\">" .$term->name ."</td></tr>\n";
           } else {
             $term_row .= "\n<!--" .$term->name ."--><tr><td class=\"poblacio\"><a id=tid-" .$term->tid ."></a>" .$term->name ."</td><td><small><a href=wifi/radios#top> (amunt)</a></small></td></tr>";
           }
           $current_tid = $term->tid;
           $print_location_terms = 1;
       } // if tid geography has changed

       // going a list the nodes
       $resnids = db_query("SELECT r.rid, r.ip, r.hosts, r.nid, r.lid, r.title, r.sponsor, r.state, r.mode, l.nick, r.channel, r.firmware  from {term_node} t, {wifi_location} l, {wifi_radio} r  where tid = '%d' AND t.nid = l.nid AND l.nid = r.nid ORDER BY l.nick",$term->tid);
       while ($row = db_fetch_array($resnids)) {
           if (($nid) && ($nid != $row["nid"]))
              continue;

           // has been printed the location terms?
           if (($print_location_terms) && ($nid == 0)) {
              $output .= $term_row;
	      $term_row = "";
              $print_location_terms = 0;
           }

           // node has changed?
           if ($curr_nid <> $row["nid"]) {
             $curr_nid = $row["nid"];
             $output .= "\n<!--" .$row["nick"] ."--><tr>";
             $output .= "<tr>";
             $output .= "<td colspan=\"11\" class=\"localization\">Node: <a href=/node/" 
	        .$row["nid"] ." title=\"veure detalls de la localització\">"
                .$row["nick"] ."</a></td><td>bandoler</td><tr/>";
           } // node has changed

           if ($rownum % 2)
            $output .= "\n<tr class=\"dark\" >";
           else
            $output .= "\n<tr class=\"light\">";
           $rownum++;
           $ipcalc = _ipcalc($row["ip"],_singleclick_netmask_by_hosts($row["hosts"]));
//           var_export($ipcalc);
           $output .= "<td class=\"radio\"><a href=/wifi/radios/" .$row["rid"] ." title=\"veure detalls de la ràdio\">" .$row["title"] ."</a></td>";
//           $output .= "<td class=\"mode\">" .$row["ip"] ." / " ._dec_to_ip(_dec_addr($ipcalc['netend']) + 3) ."<td/>";
           $output .= "<td class=\"mode\">" .$row["ip"] ."<td/>";
           $output .= "<td class=\"mode\">" .$row["mode"] ."<td/>";
           $output .= "<td class=\"mode\">" .$row["channel"] ."<td/>";
           $output .= "<td class=\"padri\">" .$row["sponsor"] ."<td/>";
           $output .=  _wifi_state_class($row["state"]) .t($row["state"]) ."<td/>";

           $output .= _wifi_ip_availability($row["ip"]);
             
           if ((user_access('edit wifi database')) && ($nid)) {
		$output .= "<td><form method=get name=\"radio form edit\" action=\"wifi/radios/" .$row["rid"] ."/edit\">";
		$output .= form_hidden('rid',$row["rid"]);
		$output .= form_button(t('Edit'),'Submit');
 		$output .= "</form><td/>";

		$output .= l(t('add link'),'wifi/links/' .$row["rid"] .'/add');

		if ($row["firmware"] != "n/d") {
		  $output .= '<td><a href="wifi/unsolclic/' .$row["rid"] .'" title="' .t("Get radio configuration with singleclick") .'">' .$row["firmware"] .'</a></td>';
		}
           }
           $totals[ $row["state"] ]++; 
           $totals[ 0 ]++; 
           $output .= "</tr>";
       } // end while there are radios
    } //foreach

    $output .= "<tr><td>&nbsp;</td></tr><tr>";
    // Totals:
    if ($totals[0] == NULL)
      $output .= "<td class=\"poblacio\">" .t('There are no radios to report') ."</td></tr>";
    else {
      $output .= "<td>&nbsp;</td></tr><tr><td class=\"poblacio\">Totals:</td><td class=\"poblacio\">" .$totals[0] ."</td></tr>";
      asort($totals);
      reset($totals);
      while (list($key, $val) = each($totals)) {
         if ($key)
           $output .= "<tr>" ._wifi_state_class($key) .t($key) ."</td>" 
                    ._wifi_state_class($key) .$totals[$key] ."</td></tr>\n";
      }
    }
    $output .= "\n</table>";

    return "<h2>" .t('List of radios') ."</h2>" .$output ."</div>";
}

function _wifi_ip_availability($ip) {
           $output = "<td>n/d<td/>";
           $resavail= db_query("SELECT avg_time, status, availability, id FROM cacti.host WHERE hostname='%s'",$ip);
           if (db_num_rows($resavail) == 1) {
		$avail = db_fetch_array($resavail);
//                $output = "<td class=\"mode\">" .$avail["status"] ."<td/>";
//                $output = "<td class=\"mode\">" .$avail["avg_time"] ."<td/>";
                switch ($avail["status"]) {
		case 1: 
		  $a_status = "Offline";
		  $a_text = t("Down");
		  break;
		case 2: 
		  $a_status = "Testing";
		  $a_text = t("Recovering");
		  break;
		case 3: 
		  $a_status = "Online";
		  $a_text = t("Up");
		  break;
                }
		$a_legend = sprintf('<a href="http://www.comesfa.org/cacti/graph_view.php?action=preview&host_id=%d&filter=" title="graphs"> %s (%01.2f%%) </a>',$avail["id"],$a_text,$avail["availability"]);
                $output =  _wifi_state_class($a_status) .$a_legend ."<td/>";
//                $output .= "<td class=\"mode\">" .$avail["availability"] ."<td/>";
	        	
           } 
	   return $output;
}


function wifi_list_ip($tid = 0) {
    $output = "<div id=wifi>";
    $ip_array = _wifi_get_ip_list('radio');

    $rownum = 0;
    $totals[] = NULL;
    $current_location = "start";
    $current_nid = 0;
    $print_location_terms = 0;
  
    $output .= "<table>";
    foreach ($ip_array as $ip) {
       $ip_str = explode(' - ',$ip);
       $query = db_query("SELECT rid, title, state FROM {wifi_radio} WHERE ip = '%s'",$ip_str[0]);
       $row = db_fetch_array($query);

       // tid geography has changed ??
       if ($current_location <> $ip_str[1]) {
           $output .= "\n<!--" .$term->name ."--><tr><td>&nbsp;</td></tr><tr><td colspan=\"4\" class=\"poblacio\">" .$ip_str[1] ."</td></tr>\n";
           $current_location = $ip_str[1];
       } // if tid geography has changed

       if ($rownum % 2)
         $output .= "\n<tr class=\"dark\" >";
        else
         $output .= "\n<tr class=\"light\">";
       $rownum++;
       $output .= "<td class=\"mode\">" .$ip_str[0] ."<td/>";
       $output .= "<td class=\"radio\"><a href=/wifi/radios/" .$row["rid"] ." title=\"veure detalls de la ràdio\">" .$row["title"] ."</a></td>";
       $output .=  _wifi_state_class($row["state"]) .t($row["state"]) ."<td/>";
             
    } //foreach
    $output .= "\n</table>";
   
    return "<h2>" .t("Ordered radio IP") ."</h2>" .$output ."</div>";
}

function _wifi_loadrid($rid) {
         $query= db_query("SELECT * FROM {wifi_radio} r WHERE rid='%d'",$rid);
         return db_fetch_array($query);
}

function wifi_list_links($nid = 0) {
    $output = "<div id=wifi>";

    $tree = taxonomy_get_tree(variable_get('wifi_vocabulary',0));
//    if ((user_access('edit wifi database')) && ($nid)) {
//	$output .= l(t('add link'),'node/' .$nid .'/links/add');
//    }
    if ($nid == 0) 
      $output .= "<hr><a id=top></a><h2>Zones:</h2>" ._wifi_list_zones($tree,"/wifi/links");

    $rownum = 0;
    $current_tid = 0;
    $current_nid = 0;
    $print_location_terms = 0;
    $oGC = new GeoCalc();

    $output .= "<table>";
    foreach ($tree as $term) {
       $term->count = taxonomy_term_count_nodes($term->tid);

       // List only those who have nodes
       if ($term->count == 0)
	continue;
       else {
         $querycount = db_query("SELECT count(*) count FROM {term_node} t, {wifi_radio} l WHERE l.nid=t.nid AND tid='%d'",$term->tid);
	 $rescount = db_fetch_array($querycount);
         if (($rescount["count"] == 0) && ($term->depth != 0))
	  continue;
       }

       // tid geography has changed ??
       if ($current_tid <> $term->tid) {
           if ($term->depth == 0) {
             $term_row = "\n<!--" .$term->name ."--><tr><td><a id=tid-" .$term->tid ."></a>&nbsp;</td></tr><tr><td class=\"comarca\">" .$term->name ."</td></tr>\n";
           } else {
             $term_row .= "\n<!--" .$term->name ."--><tr><td class=\"poblacio\"><a id=tid-" .$term->tid ."></a>" .$term->name ."</td><td><small><a href=wifi/links#top> (amunt)</a></small></td></tr>";
           }
           $current_tid = $term->tid;
           $print_location_terms = 1;
       } // if tid geography has changed

       // going a list the radios
       $resnids = db_query("SELECT distinct r.rid, r.title, l.nick, l.nid, l.lat, l.lon, r.title  from {term_node} t, {wifi_radio} r, {wifi_location} l, {wifi_link} c  WHERE tid = '%d' AND t.nid = r.nid AND l.nid = r.nid AND (c.rid1 = r.rid OR c.rid2 = r.rid) ORDER BY l.nick",$term->tid);
       while ($row = db_fetch_array($resnids)) {
           if (($nid) && ($nid != $row["nid"]))
              continue;

           // has been printed the location terms?
           if (($print_location_terms) && ($nid == 0)) {
              $output .= $term_row;
	      $term_row = "";
              $print_location_terms = 0;
           }

           // node has changed?
           if ($curr_nid <> $row["nid"]) {
             $curr_nid = $row["nid"];
             $output .= "\n<!--" .$row["nick"] ."--><tr>";
             $output .= "<tr>";
             $output .= "<td colspan=4 class=\"localization\">Node: <a href=/node/" 
	        .$row["nid"] ." title=\"veure detalls de la localització\">"
                .$row["nick"] ."</a></td><tr/>";
           } // node has changed

           $reslinks = db_query("SELECT * FROM {wifi_link} c WHERE c.rid1 ='%d' OR c.rid2 = '%d'",$row["rid"],$row["rid"]);
           while ($link = db_fetch_array($reslinks)) {
             if ($rownum % 2)
              $output .= "\n<tr class=\"dark\" >";
            else
             $output .= "\n<tr class=\"light\">";
            $rownum++;
            if ($link["rid2"] != $row["rid"]) 
               $otherrid = $link["rid2"];
            else
               $otherrid = $link["rid1"];

            // radio data
	    $rid1 = _wifi_loadrid($link["rid1"]);
	    $rid2 = _wifi_loadrid($link["rid2"]);

            $resother = db_query("SELECT l.nick, l.nid, l.lat, l.lon FROM {wifi_location} l, {wifi_radio} r WHERE r.rid='%d' AND r.nid=l.nid",$otherrid);
            $other = db_fetch_array($resother);
            if ($other["nid"] != $row["nid"])
              $output .= "<td class=\"radio\"><a href=node/" .$other["nid"] ." title=\"veure aquest node\">" .$other["nick"] ."</a></td>";
            else
              $output .= "<td class=\"radio\">&nbsp</td>";
            $output .= "<td class=\"radio\">" .l($rid1["title"],'wifi/radios/' .$rid1["rid"]) ." / " .l($rid2["title"], 'wifi/radios/' .$rid2["rid"]) ."</td>";
            $output .= "<td class=\"mode\">" .$link["ip1"] ." / " .$link["ip2"] ."<td/>";
//            $output .= "<td class=\"mode\">" .$link["ip2"] ."<td/>";
            $output .= "<td class=\"mode\">" .$link["link_type"] ."<td/>";
            $output .=  _wifi_state_class($link["state"]) .t($link["state"]) ."<td/>";
            if (($other["nid"] != $row["nid"]) and 
               (($row["lon"]>0) and ($row["lat"]>0) and ($other["lat"]>0) and ($other["lon"]>0))
               ) {
               $gDist = round($oGC->EllipsoidDistance($row["lat"], $row["lon"], $other["lat"], $other["lon"]),3);
               $output .= "<td class=\"mode\">" .sprintf("%7.3f",$gDist) ."<td/>";
               $dtotals[ $link["state"] ] = $dtotals[ $link["state"] ] + $gDist; 
               $total_distances = $total_distances + $gDist;
            } else
              $output .= "<td>&nbsp;<td/>";
              
            if ((user_access('edit wifi database')) && ($nid)) {
 		$output .= "<td><form method=get name=\"link form edit\" action=\"wifi/links/" .$link["cid"] ."/edit\">";
 		$output .= form_hidden('cid',$row["cid"]);
 		$output .= form_button(t('Edit'),'Submit');
  		$output .= "</form><td/>";
            }
            $totals[ $link["state"] ]++; 
            $totals[ 0 ]++; 
            $output .= "</tr>";
           } // end of while link
       } // end while there are radios
    } //foreach

    $output .= "<tr><td>&nbsp;</td></tr><tr>";
    // Totals:
    if ($totals[0] == NULL)
      $output .= "<td class=\"poblacio\">" .t('There are no links to report') ."</td></tr>";
    else {
      arsort($totals);
      reset($totals);
      if ($nid == 0) {
          $total = $totals[0] / 2;
          $distance = $total_distances / 2;
      } else {
          $total = $totals[0];
          $distance = $total_distances;
      }
	
      $output .= "<td>&nbsp;</td></tr><tr><th>&nbsp</th><th>" .t('links') ."</th><th>" .t('Kms.') ."</th></tr>\n";
      $output .= "<td class=\"poblacio\">Totals:</td><td class=\"poblacio\">" .$total ."</td><td class=\"poblacio\">" .$distance ."</td></tr>";
      while (list($key, $val) = each($totals)) {
         if ($nid == 0)  {
          $dtotals[$key] = $dtotals[$key] / 2;
          $totals[$key] = $totals[$key] / 2;
	 }
         if ($key) {
           $output .= "<tr>" ._wifi_state_class($key) .t($key) ."</td>" 
                    ._wifi_state_class($key) .$totals[$key] ."</td><td>"
                    .$dtotals[$key] ."</td></tr>\n";
         }
      }
    }
    $output .= "\n</table>";
   
    return "<h2>" .t('List of links') ."</h2>" .$output ."</div>";
}

function wifi_page() { 
  global $id, $user, $or, $and;

  $op = $_POST["op"];
  $id = $_POST["id"];
  $_edit = $_GET["edit"];
  if (empty($op)) {
    $op = arg(1);
  }
  if (empty($id)) {
    $id = arg(2);
  }

  switch ($op) {
    case "models":
      if (empty($id)) {
	$output = wifi_list_models();
      } else {
        $output = wifi_list_models($id);
      }
      break;
    case "availability":
      if (empty($id)) {
	$output = wifi_list_availability();
      } else {
        $output = wifi_list_availability($id);
      }
      break;
    case "radios":
      if (empty($id)) {
	$output = wifi_list_availability();
      } else {
        if (arg(3) == 'edit') 
          $output = wifi_radio_form($id);
	else
        if ($id == 'update')
	  $output = wifi_radio_update($_edit);
        else	
          $output = wifi_radio_details($id);
      }
      break;
    case "links":
      if (empty($id)) {
	$output = wifi_list_links();
      } else {
        if (arg(3) == 'edit') 
          $output = wifi_link_form($id);
	else
        if (arg(3) == 'add') 
          $output = wifi_link_form(0,0,$id);
	else
        if ($id == 'update')
	  $output = wifi_link_update($_edit);
        else	
          $output = wifi_list_links($id);
      }
      break;
    case "links":
        $output = wifi_list_links();
      break;
    case "distances":
        $output = wifi_node_distances($id);
      break;
    case "list_radio_ip":
        $output = wifi_list_ip();
      break;
    case "loadmap":
        load_pwpwm_nodes(1);
	return;
      break;
    case "unsolclic":
        $output = wifi_unsolclic($id);
	return;
      break;
    case "nodes":
    default:
      if (empty($id)) {
        $output = wifi_list_nodes();
      } else {
        $output = wifi_node_details($id);
      }
  }
  return print theme('page','<div id=wifi>' .$output .'</div>');
}

function _wifi_list_zones($tree,$prefix) {
    $output = "";
    $rownum = 0;
    $current_tid = 0;
    reset($tree);
    foreach ($tree as $term) {
       $term->count = taxonomy_term_count_nodes($term->tid);

       // List only those who have nodes
       if ($term->count == 0)
        continue;

       // tid geography has changed ??
       if ($current_tid <> $term->tid) {
           if ($term->depth == 0) {
             $output .= "\n<br><!--" .$term->name ."--><h3><a href=" .$prefix ."#tid-" .$term->tid .">" .$term->name ."</a></h3>\n";
           } else {
             $output .= "\n&middot;<!--" .$term->name ."--><a href=" .$prefix ."#tid-" .$term->tid ."><small>" .$term->name ."</a></small>";
           }
           $current_tid = $term->tid;
       } // if tid geography has changed

       $resnids = db_query("SELECT l.nid, lid, nick, zone, sponsor, state  from {term_node} t, {wifi_location} l  where tid = '%d' AND t.nid = l.nid",$term->tid);
       while ($row = db_fetch_array($resnids)) {

         $rownum = $rownum + 1;
//         $totals[ $row["state"] ]++;
//         $totals[ 0 ]++;
//         $output .=  _wifi_state_class($row["state"]) .t($row["state"]) ."<td/>";
       } // eof while nodes
//       $output .= "</tr>";

    } // foreach tid geography

    return $output;
}



function wifi_list_nodes() { 

    $tree = taxonomy_get_tree(variable_get('wifi_vocabulary',0));
    $output = "<hr><a id=top></a><h2>Zones:</h2>" ._wifi_list_zones($tree,"wifi/nodes");

    $output .= "<hr>";
 
    $rownum = 0;
    $totals[] = NULL;
    $current_tid = 0;

    $output .= "<table>";
    reset($tree);
    foreach ($tree as $term) {
       $term->count = taxonomy_term_count_nodes($term->tid);

       // List only those who have nodes
       if ($term->count == 0)
	continue;

       // tid geography has changed ??
       if ($current_tid <> $term->tid) {
           if ($term->depth == 0) {
             $output .= "\n<!--" .$term->name ."--><tr><td><a id=tid-" .$term->tid ."></a></td></tr><tr><td class=\"comarca\">" .$term->name ."</td></tr>\n";
           } else {
             $output .= "\n<!--" .$term->name ."--><tr><td class=\"poblacio\"><a id=tid-" .$term->tid ."></a>" .$term->name ."</td><td><small><a href=wifi/nodes#top> (amunt)</a></small></td></tr>";
           }
           $current_tid = $term->tid;
       } // if tid geography has changed

       // going a list the nodes
       $resnids = db_query("SELECT l.nid, lid, nick, zone, sponsor, state  from {term_node} t, {wifi_location} l  where tid = '%d' AND t.nid = l.nid ORDER BY nick",$term->tid);
       while ($row = db_fetch_array($resnids)) {

         $rownum = $rownum + 1;
         if ($rownum % 2)
          $output .= "\n<tr class=\"dark\" >";
         else
          $output .= "\n<tr class=\"light\">";
         $output .= "<td class=\"localization\" ><a href=/node/" .$row["nid"]
               .">" .$row["nick"] ."</a></td>"
               ."<td  class=\"zone\">" .$row["zone"] ."</td>"
               ."<td  class=\"contact\">" .$row["sponsor"] ."</td>";
         $totals[ $row["state"] ]++; 
         $totals[ 0 ]++; 
         $output .=  _wifi_state_class($row["state"]) .t($row["state"]) ."<td/>";
       } // eof while nodes
       $output .= "</tr>";
    } // foreach tid geography

    // Totals:
    $output .= "<tr><td>&nbsp;</td></tr><tr><td class=\"poblacio\">Totals:</td><td class=\"poblacio\">" .$totals[0] ."</td></tr>";
    asort($totals);
    reset($totals);
    while (list($key, $val) = each($totals)) {
       if ($key)
         $output .= "<tr>" ._wifi_state_class($key) .t($key) ."</td>" 
                  ._wifi_state_class($key) .$totals[$key] ."</td></tr>\n";
    }

    $output .= "\n</table>";
   
    $output = t("List of wifi hotspots by geography") .$output;

    return $output;
}

function _wifi_state_class($state = "n/d") {
    switch ($state) {
        case "Working": $output .= "<td class=\"online\">";  break;
        case "Online": $output .= "<td class=\"online\">";  break;
        case "Planned": $output .= "<td class=\"projectat\">"; break;
        case "Testing": $output .= "<td class=\"proves\">"; break;
        case "Building": $output .= "<td class=\"construction\">"; break;
        case "Offline": $output .= "<td class=\"offline\">"; break;
        case "Dropped": $output .= "<td class=\"offline\">"; break;
        default: $output .="<td class=\"none\">";
    }
    return $output; 
}

function wifi_list_models($mid = 0) { 
    $output = "";

    $query = "SELECT  m.mid, m.fid, m.model, f.nom, "
	."        m.tipus, m.potencia_max, m.modes, "
	."        m.ap, m.wds, m.bridge, m.client, "
	."        m.connector, m.antenes, m.router, m.firewall, "
	."        m.qos, m.snmp, "
	."        m.hack, m.url, m.comentaris, f.url furl "
	."FROM guifi_model m, guifi_manufacturer f "
	."WHERE f.fid = m.fid ";
    if ($mid)
     $query .= " AND m.mid = " .$mid ." "; 
    $query .=  "ORDER BY m.tipus, m.modes, f.nom";
    $result = mysql_query( $query );
    if (!$result) {
       die("query failed: " . mysql_error());
    }

    $curr_tipus = "";
    $curr_modes = "";

    $rownum = 0;
    if (!($mid)) while ($row = mysql_fetch_array($result)) {
       $titols = "<tr><th>fabricant</th><th>model</th><th>mW max</th><th>ap?</th><th>wds?</th><th>bridge?</th><th>client?</th><th>router?</th><th>firewall?</th><th>QoS?</th><th>snmp?</th><th>hack?</th><tr>";
       // canvi de tipus?
       if ($curr_tipus <> $row["tipus"]) {
        if ($curr_tipus <> "")
          $output .= "\n</table>";
        $curr_tipus = $row["tipus"];
        $output .= "<h3>" .$curr_tipus ."<h3/>\n<table style=\"border: 1px solid #abc;\">";
        $curr_modes = "";
       }
   
       // Canvi de mode?
       if ($curr_modes <> $row["modes"]) {
        $curr_modes = $row["modes"];
        $output .= "<tr>&nbsp</tr><tr><th colspan=\"12\" style=\"text-align: center;\">" .$row["modes"] ."</th></tr>" .$titols;
       }

       $rownum .= $rownum + 1;
       if ($rownum % 2)
	$output .= "<tr class=dark>";
       else
	$output .= "<tr class=light>";
    
       $output .= "<td><a href=" .$row["furl"] ." target=_blank>" .$row["nom"] ."</a></td>"
             ."<td><a href=/wifi/models/" .$row["mid"] 
             .">" .$row["model"] ."</a></td>"
             ."<td>" .$row["potencia_max"] ."</td>"
             ."<td>" .$row["ap"]."</td>"
             ."<td>" .$row["wds"]."</td>"
             ."<td>" .$row["bridge"]."</td>"
             ."<td>" .$row["client"]."</td>"
             ."<td>" .$row["router"]."</td>"
             ."<td>" .$row["firewall"]."</td>"
             ."<td>" .$row["qos"]."</td>"
             ."<td>" .$row["snmp"]."</td>"
             ."<td>" .$row["hack"]."</td>";
       $output .= "</tr>";
    } else {
      $row = mysql_fetch_array($result);
      $titols = "<tr><td style=\"background-color: rgb(238, 238, 255); text-align: right;\">";
      
      $output .= "<h3>Detalls del model: " .$row["nom"] ." " .$row["model"] ."<h3/>\n<table style=\"border: 1px solid #abc;\">"
             .$titols ."tipus</td><td>" .$row["tipus"] ."</td></tr>"
             .$titols ."protocols</td><td>" .$row["modes"] ."</td></tr>"
             .$titols ."potència màxima</td><td>" .$row["potencia_max"] ."mW</td></tr>"
             .$titols ."mode ap</td><td>" .$row["ap"]."</td></tr>"
             .$titols ."mode repetidor</td><td>" .$row["wds"]."</td></tr>"
             .$titols ."mode bridge<td>" .$row["bridge"]."</td></tr>"
             .$titols ."mode client</td><td>" .$row["client"]."</td></tr>"
             .$titols ."encamina xarxes</td><td>" .$row["router"]."</td></tr>"
             .$titols ."tallafocs</td><td>" .$row["firewall"]."</td></tr>"
             .$titols ."qualitat de servei (QoS)</td><td>" .$row["qos"]."</td></tr>"
             .$titols ."snmp<td>" .$row["snmp"]."</td></tr>"
             .$titols ."hack</td><td>" .$row["hack"]."</td></tr>" 
             .$titols ."antenes externes</td><td>" .$row["antenes"]."</td></tr>" 
             .$titols ."connector d'antena</td><td>" .$row["connector"]."</td></tr>" 
             .$titols ."enllaços</td><td>" ."<a href=" .$row["url"]." target=_blank>model</a> <a href=" .$row["furl"]." target=_blank>fabricant</a></td></tr>" 
             .$titols ."comentaris</td><td>" .$row["comentaris"]."</td></tr>";
    }

    $output .= "\n</table>";
    
    if ($mid)
     $output .= "<br><a href=http://www.comesfa.org/ddbk/guifi/index.php?table_name=models&function=edit&where_field=mid&where_value=" .$mid .">modificar model</a><br>";
   
    $titol = "Llistat de la base de dades de models de ràdios<br>";
    if (user_access("edit wifi database")) {
       $links = "<br><a href=http://www.comesfa.org/ddbk/guifi/index.php?function=show_insert_form&table_name=models>agefir models</a><br>"; 
       $output = $titol .$links .$output .$links;
    } else {
       $output = $titol .$output;
    }

    return $output;
}

function wifi_settings() {
  $output .= form_textfield("Titol del bloc", "wifi_title", variable_get("wifi_title", t("guifi.net")), 35, 255, t("Títol de la capsa del wifi..."));
  $output .= form_select(t('Distància màxima'), 'wifi_max_distance', variable_get('wifi_max_distance', 25), drupal_map_assoc(array( 5, 10, 15, 20, 25, 30, 40, 50, 75, 100)), t('Afecta al llistat de distàncies entre nodes, limitant-lo al valor que s\'indica.'));
  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vocabulary) {
    $select[$vocabulary->vid] = $vocabulary->name;
  }
  $output  .= form_select(t("Vocabulaty that has the geography"), "wifi_vocabulary", variable_get("wifi_vocabulary", array()), $select, t("Select the vocabulary that describes the geography hierarchy (i.e.: Country, Region, City, Suburb...."), "", 0, 1);


 return $output;
}


/********************************************************************
 * Node Hooks
 ********************************************************************/

function wifi_node_name($node) {
  return t("wifi");
}

function wifi_access($op, $node) {
  switch($op) {
    case 'create':
      return user_access("edit wifi database");
  }
}

function wifi_form(&$node, &$param) {

  $output .= form_textfield(t("Nick"), "nick", $node->nick, 60, 128, t("Short name, 7-bit chars only, will be used while  hostname, reports, etc.") . ($error['nick'] ? $error["nick"] : ''));
  $output .= form_textfield(t("Sponsor"), "sponsor", $node->sponsor, 60, 128, t("Nickname of the sponsor or who to contact with regarding this node if it is distinct of the owner of this page.") . ($error['sponsor'] ? $error["sponsor"] : ''));

  // Position
  if ($node->lat != NULL) {
    $node->latdeg = floor($node->lat);
    $node->latmin = (($node->lat - floor($node->lat)) * 60);
    $node->latseg = round(($node->latmin - floor($node->latmin)) * 60,4);
    $node->latmin = floor($node->latmin);
  }
  if ($node->lon != NULL) {
    $node->londeg = floor($node->lon);
    $node->lonmin = (($node->lon - floor($node->lon)) * 60);
    $node->lonseg = round(($node->lonmin - floor($node->lonmin)) * 60,4);
    $node->lonmin = floor($node->lonmin);
  }

  $degminsec = form_item(t('Latitude'), 
		'<input type="text" name="edit[latdeg]" size="12" maxlength="24" value="'. $node->latdeg .'"/>º '
		.'<input type="text" name="edit[latmin]" size="12" maxlength="24" value="'. $node->latmin .'"/>\' '
		.'<input type="text" name="edit[latseg]" size="12" maxlength="24" value="'. $node->latseg .'"/>"'
                , NULL, NULL, FALSE);
  $degminsec .= form_item(t('Longitude'), 
		'<input type="text" name="edit[londeg]" size="12" maxlength="24" value="'. $node->londeg .'"/>º '
		.'<input type="text" name="edit[lonmin]" size="12" maxlength="24" value="'. $node->lonmin .'"/>\' '
		.'<input type="text" name="edit[lonseg]" size="12" maxlength="24" value="'. $node->lonseg .'"/>"'
                , t('Latitude & Longitude: positive means EAST/NORTH, negative WEST/SOUTH.<br>If you provide data in decimal, leave the following fields empty and a conversion will be made.'), NULL, FALSE);
  $degminsec .= form_textfield(t("Zone"), "zone", $node->zone, 60, 128, t("Zone, address, neighborhood. Something that describes your area within your location.<br>If you don't know your lat/lon, please provide street and number or crossing street.") . ($error['zone'] ? $error["zone"] : ''));
  $output .= form_group('Position',$degminsec,'Please provide at least the zone if lat/lon is not known.');
  $output .= form_textfield(t("Altitude"), "elevation", $node->elevation, 20, 20, t("Altitude above sea level.") . ($error['elevation'] ? $error["elevation"] : ''));


  $stable_types = array('Yes' => t('Yes, is intended to be kept always on,  avalable for extending the mesh'),
                        'Ocassionally' => t("I'm sorry. Will be connected just when I'm online"));

  $state_types = array('Planned' => t('Planned'),
                        'Building' => t('Building'),
                        'Working' => t('Working'),
                        'Testing' => t('Testing'),
                        'Dropped' => t('Dropped'));


  $output .= form_select(t("It's supposed to be a stable online node?"), "stable", ($node->stable ? $node->stable : 'Yes'), $stable_types, t("That helps while planning a mesh network. We should know which locations are likely available to provide stable links."));
  $output .= form_select(t("Current state"), "state", ($node->state ? $node->state : 'Planned'), $state_types, t("How we should consider the state by now, regardless of a temporary outage."));
    
  $output .= implode("", taxonomy_node_form("wifi", $node));

  $output .= form_textarea(t("Body"), "body", $node->body, 60, 20, t("Textual description of the wifi") . ($error['body'] ? $error['body'] : ''));
 
  return $output;
}

function wifi_insert($node) {
  $lid = db_next_id('wifi_location_id');
  db_query("INSERT INTO {wifi_location} (lid, nid, nick, lat, lon, elevation, zone, state, stable, sponsor) VALUES ('%d', '%d', '%s', '%.9f', '%.9f', '%d', '%s', '%s', '%s', '%s' )", $lid, $node->nid, $node->nick, $node->lat, $node->lon, $node->elevation, $node->zone, $node->state, $node->stable, $node->sponsor);
  load_pwpwm_nodes(0);
  cache_clear_all();
}

function wifi_update($node) {
  db_query("UPDATE {wifi_location} set nid='%d', nick='%s', lat='%.9f', lon='%.9f', elevation='%d', zone='%s', state='%s', stable='%s', sponsor='%s' WHERE nid= '%d'",$node->nid, $node->nick, $node->lat, $node->lon, $node->elevation, $node->zone, $node->state, $node->stable, $node->sponsor, $node->nid);
  load_pwpwm_nodes(0);
  cache_clear_all();
}

function wifi_delete(&$node) {
  db_query("DELETE FROM {wifi_location} WHERE nid = '%s'", $node->nid);
  load_pwpwm_nodes(0);
  cache_clear_all();
}

function wifi_validate(&$node) {
  if ($node->nick != NULL) {
    $result = db_query("SELECT * from {wifi_location} WHERE nick = '%s' and nid <> '%d'", $node->nick, $node->nid);
    if (db_num_rows($result) > 0) {
      $wifi = db_fetch_object($result);
      $othernode = node_load(array("nid" => $wifi->nid));
      form_set_error('nick', t('Nick already in use, %link-to-existing', array("%link-to-existing" => l($othernode->title, 'node/' . $othernode->nid . '/edit'))));
    }
  }

  // elevation
  if ($node->elevation == 0)
    $node->elevation = NULL;
  if (($node->elevation < -100) && ($node->elevation != NULL)) 
    form_set_error('elevation', t('Altitude must be above sea level. Are you in a submarine? :)'));
  if (($node->elevation > 9000) && ($node->elevation != NULL)) 
    form_set_error('elevation', t('Do you mean that you are flying over the earth??? :)'));

  if ($node->latdeg != NULL)
        $node->lat = $node->latdeg;
  if ($node->latmin != NULL)
	$node->lat = $node->lat + ($node->latmin / 60);
  if ($node->latseg != NULL)
	$node->lat = $node->lat + ($node->latseg / 3600);
  if ($node->londeg != NULL)
        $node->lon = $node->londeg;
  if ($node->lonmin != NULL)
	$node->lon = $node->lon + ($node->lonmin / 60);
  if ($node->lonseg != NULL)
	$node->lon = $node->lon + ($node->lonseg / 3600);
}

function wifi_load($node) {
  return db_fetch_object(db_query("SELECT * FROM {wifi_location} WHERE nid = '%d'", $node->nid));
}

function wifi_filter_tips($delta, $format, $long = false) {
  if ($long) {
    return t("<p>You may create links to items stored in our wifi registry using a special syntax. The wifi codes will be replaced by a links to visit the real websites. Syntax: <code>[wifi:link_id]</code> or <code>[wifi:http://a.wifi.example.com/]</code>.</p>");
  }
  else {
    return t("You may link to webpages <a href=\"%long-tip\">through the wifis registry</a>", array("%long-tip" => url("filter/tips", NULL, 'wifi')));
  }
}

function wifi_view(&$node, $teaser = 0, $page = 0) {
 $output = _wifi_node_view($node);

 $node->body .= $output;
}

function _wifi_node_view(&$node) {
    $output = "<div id=wifi>";

    $title = "<tr class=\"dark\"><td class=\"label\"\">";
    $output .= "<h2>" .t('Node details for: ') .$node->nick ."<h2/><table style=\"border: 1px solid #abc;\">";

//    $poblacio[] = array();
    foreach (taxonomy_node_get_terms_by_vocabulary($node->nid,variable_get('wifi_vocabulary',0)) as $term) {
        $poblacio[] .= l($term->name, 'taxonomy/term/'. $term->tid);
        foreach (taxonomy_get_parents($term->tid) as $parent) {
           $poblacio[] .= l($parent->name, 'taxonomy/term/' .$parent->tid ."/all");
        }
      }
    if (count($poblacio) > 1) {
      $output .= $title .t("Location") ."<td/><td>" .implode($poblacio,", ") ."<td/><tr/>";
    }
    else
    {
      $output .= $title .t("Location") ."<td/><td>" .$poblacio ."<td/><tr/>";
    }
      
    $output .= $title .t("Zone") ."<td/><td class=\"data\">" .$node->zone ."<td/><tr/>";

    $output .= $title .t("Who to contact") ."<td/><td class=\"data\">" .$node->sponsor ."<td/><tr/>";

    // Position
    if (($node->lat != 0) && ($node->lon != 0)) {
      $output .= $title .t("Position (Lat/Long)") ."<td/>";
      $output .= "<td class=\"data\"> <a href=http://www.mapquest.com/maps/map.adp?latlongtype=decimal&latitude=" .$node->lat
                 ."&longitude=" .$node->lon ." target=_blank>(" .$node->lat ."/" .$node->lon .")</a>";
      $output .="</td>"; 
      $output .= "<tr/>";
    }
    $output .= $title .t("Elevation above sea level") ."<td/><td class=\"data\">" .$node->elevation ."<td/><tr/>";
    $output .= $title .t("Status") ."<td/>" ._wifi_state_class($node->state) .t($node->state) ."<td/><tr/>";
    $output .= $title .t("Available for mesh (stable)") ."<td/><td class=\"data\">" .$node->stable ."<td/><tr/>";

    $output .="</table></div>";

    if ($node->nid) {
      $output .= "<br>" .wifi_list_availability($node->nid);
      $output .= "<br>" .wifi_list_links($node->nid);
    }

    return $output;
}

function wifi_radio_view(&$radio) {
    $output = "<div id=wifi>";

    $title = "<tr class=\"dark\"><td class=\"label\"\">";
    $output .= "<h2>" .t('Radio details for: ') .$radio["title"] ."<h2/><table style=\"border: 1px solid #abc;\">";


    $query = db_query("SELECT r.nid,nick from {wifi_radio} r, {wifi_location} l WHERE l.nid=r.nid AND rid='%d'",$radio["rid"]);
    $node =  db_fetch_array($query);

    $output .= $title .t("Location") ."<td/><td>" .l($node["nick"],"node/" .$node["nid"])  ."<td/><tr/>";
    $output .= $title .t("Sponsor") ."<td/><td>" .$radio["sponsor"] ."<td/><tr/>";
    $output .= $title .t("Model/Manufacturer") ."<td/><td><a href=/wifi/models/" .$radio["mid"] .">" .$radio["model"] ." " .$radio["manufacturer"] ."</a></td></tr>";
    $output .= $title .t("Mode") ."<td/><td>" .$radio["mode"] ."<td/><tr/>";
    $output .= $title .t("Protocol") ."<td/><td>" .$radio["protocol"] ."<td/><tr/>";
    $netmask = _singleclick_netmask_by_hosts($radio["hosts"]);
    $ipdata = _ipcalc($radio["ip"], $netmask);
    $output .= $title .t("IP address") ."<td/><td>" .$radio["ip"] ."<td/><tr/>";
    $output .= $title .t("IP network") ."<td/><td>" .$ipdata["netid"] .'/' .$netmask ."<td/><tr/>";
    $output .= $title .t("MAC address") ."<td/><td>" .$radio["mac"] ."<td/><tr/>";
    $output .= $title .t("Antena: type/gain/direction") ."<td/><td>" .$radio["antenna_type"] ." " .$radio["antenna_gain"] ." " .$radio["antenna_direction"] ."<td/><tr/>";
    $output .= $title .t("SSID & Channel") ."<td/><td>" .$radio["ssid"] ." " .$radio["channel"] ."<td/><tr/>";
    $output .= $title .t("Status") ."<td/>" ._wifi_state_class($radio["state"]) .t($radio["state"]) ."<td/><tr/>";
    $output .= $title .t("Availability") ."<td/>" ._wifi_ip_availability($radio["ip"]) ."<tr/>";

    $output .= $title ."Comments<td/><td>" .$radio["comments"] ."<td/><tr/>";

    $output .="</table></div>";

//    $output .="<br><a href=http://www.comesfa.org/ddbk/guifi/configurador/unsolclic.php?radio=" .$radio["rid"] .">configuració <b><i>\"UNSOLCLIC\"</i></b> per aquesta ràdio</a><br>";
    $output .= l(t('Generate "SingleClick" configuration for this radio'),'wifi/unsolclic/' .$radio["rid"]);

    return $output;
}

function wifi_radios_page() {
  $op = $_POST['op'] ? $_POST['op'] : arg(1);
  $edit = $_POST['edit'];

  $node = node_load(array('nid' => $op));
  print theme('page', wifi_list_radios($op), $node->title);
}

function wifi_radio_form($rid = 0, $nid = 0) {
  if ($rid > 0) {
    $ridquery = db_query("SELECT * FROM {wifi_radio} where rid = '%d'",$rid);
    if (db_num_rows($ridquery == 0)) {
	$output = t("Radio does not exist");
        return $output;
    }
    $radio = db_fetch_array($ridquery);
  } else if ($nid) {
    $node = node_load(array('nid' => $nid));
    $radio["nid"] = $nid;
    $radio["mac"] = "00:00:00:00:00:00";
    $radio["title"] = $node->nick;
    $radio["ssid"] = $node->nick;
    $radio["sponsor"] = $node->sponsor;
  }


  $querymid = db_query("SELECT mid, model, f.nom manufacturer FROM guifi_model m, guifi_manufacturer f WHERE f.fid = m.fid");
  while ($model = db_fetch_array($querymid)) {
     $models_array[$model["mid"]] = $model["manufacturer"] .", " .$model["model"];
  }
  $querynid = db_query("SELECT nid, nick FROM {wifi_location}");
  $loc_id = 0;
  while ($rownid = db_fetch_array($querynid)) {
     foreach (taxonomy_node_get_terms_by_vocabulary($rownid["nid"],variable_get('wifi_vocabulary',0)) as $term) {
       $location = array();
       if ($loc_id == 0)
	$loc_id = $term->tid;
       foreach (taxonomy_get_parents($term->tid) as $parent) {
                $location[] .= $parent->name;
       }
       $location[] = $term->name;
//       array_reverse($location);
       $nids_array[$rownid["nid"]] = implode($location,', ') .", " .$rownid["nick"];
     }
  }

  foreach(taxonomy_node_get_terms_by_vocabulary($node->nid,variable_get('wifi_vocabulary',0)) as $term) {
   $loc_id = $term->tid; 
   continue;
  }
  $state_types = array('Planned' => t('Planned'),
                        'Building' => t('Building'),
                        'Working' => t('Working'),
                        'Testing' => t('Testing'),
                        'Dropped' => t('Dropped'));

  $output = "<form method=get action=\"/wifi/radios/update\" name=\"radio\">";
  $output .= form_textfield(t("Name"), "title", $radio["title"], 40, 40, t("Short name, 7-bit chars only, will be used while  hostname, reports, etc.") . ($error['title'] ? $error["title"] : ''));
  $output .= form_textfield(t("Sponsor"), "sponsor", $radio["sponsor"], 20, 20, t("Who to contact, sponsorizes this radio.") . ($error['sponsor'] ? $error["sponsor"] : ''));
  $output .= form_select(t('Radio Model'), 'mid', $radio["mid"], $models_array, t('Radio model.'));
  $output .= form_select(t('Location'), 'nid', $radio["nid"], $nids_array, t('At which location is this radio placed.'));
  $output .= form_select(t('Status'), 'state', $radio["state"], $state_types, t('Current state of this radio.'));
  $output .= form_select(t('Firmware'), 'firmware', $radio["firmware"], drupal_map_assoc(array('n/d','Alchemy Sveasoft','Talisman Sveasoft','OpenWRT')) , t('Firmware for database based configuration.'));

  $wifi = "<table><td>" .form_textfield(t("SSID"), "ssid", $radio["ssid"], 20, 20, ($error['ssid'] ? $error["ssid"] : ''));
  $wifi .= "</td><td>" .form_select(t('Channel'), 'channel', $radio["channel"], drupal_map_assoc(array( 0=>'Auto',1=>1,2,3,4,5,6,7,8,9,10,11,12,13,14)), NULL);

  // By now, only AP/WDS and Client mode are supported
  $wifi .= "</td><td>" .form_select(t('Mode'), 'mode', $radio["mode"], drupal_map_assoc(array( 'AP/WDS','Client','AP/Client Link (*)','AP (*)','Bridge (*)')), NULL);
  $wifi .= "</td><td>" .form_select(t('Protocol'), 'protocol', $radio["protocol"], drupal_map_assoc(array('802.11bg', '802.11b', '802.11g', '802.11abg', '802.11a', 'WiMAX')), NULL);
  $wifi .= "</td></table>";
  $output .= form_group('Wireless data',$wifi,'Wireless information.<br>(*) Mode is not supported yet by unsolclic.');
 
  if ($rid == 0)
    foreach (taxonomy_node_get_terms_by_vocabulary($node->nid,variable_get('wifi_vocabulary',0)) as $term) {
       $network = form_select(t("Used IP's"), "dummy", 0, _wifi_get_ip_list('radio',$loc_id), t("List of all used IP. Helps you finding the next."));
       continue;
    }
  $network .= "<table><td>";
  $network .= form_textfield(t("IP"), "ip", $radio["ip"], 20, 20, ($error['ip'] ? $error["ip"] : ''));
  $network .= "</td><td>" .form_select(t('Hosts'), 'hosts', $radio["hosts"], drupal_map_assoc(array( '30',  '6', '14', '62', '126', '254')), NULL);
  $network .= "</td><td>" .form_textfield(t("Device MAC Address"), "int_mac", $radio["int_mac"], 17, 17,  ($error['int_mac'] ? $error["int_mac"] : ''));
  $network .= "</td><td>" .form_textfield(t("WLan MAC Address"), "mac", $radio["mac"], 17, 17,  ($error['mac'] ? $error["mac"] : ''));
  $network .= "</td></table>";
  $output .= form_group('Netwok data',$network,'Network information. Please don\'t fill the information unless you are sure of what you are doing.<br>IP hints:<br><ul><li>AP, APWDS: Router main IP</li><li>Client, AP/Client Link: Leave blank for dhcp (dynamic) IP and fill within AP IP range for static IP</li><li><a href="wifi/list_radio_ip" target="_blank">Used IP\'s report</a></li></ul>');

  $antenna = "<table><td>" .form_select(t('Type'), 'antenna_type', $radio["antenna_type"], drupal_map_assoc(array('stock', 'omni', 'directive', 'sector', 'patch')), NULL);
  $antenna .= "</td><td>" .form_select(t('Gain'), 'antenna_gain', $radio["antenna_gain"], drupal_map_assoc(array(2,8,12,14,18,21,24,'more')), NULL);
  $antenna .= "</td><td>" .form_select(t('Orientation'), 'antenna_orientation', $radio["antenna_orientation"], drupal_map_assoc(array('N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW')), NULL);
  $antenna .= "</td></table>";
  $output .= form_group('Antenna',$antenna,'Antenna characteristics.');

  $output .= form_textarea(t("Comments"), "comments", $radio["comments"], 80, 20, t("Any additional comments that you wish to add about this radio.") . ($error['comments'] ? $error["comments"] : ''));
  
  $output .= form_hidden("rid",$rid);
  if ($rid) 
    $taction = t("Save changes");
  else 
    $taction = t("Send");
  $output .= form_button($taction,'submit');
 return "</form>" .$output;
}

function wifi_radio_update($radio) {
  if (!(user_access('edit wifi database'))) {
    drupal_access_denied();
    return;
  }

  if ($radio["rid"]) {
       db_query("UPDATE {wifi_radio} set changed='%d', title='%s', ssid='%s', lid='%d', protocol='%s', mid='%d', ip='%s', hosts='%s', mac='%s', int_mac='%s', firmware='%s', antenna_type='%s', antenna_gain='%s', antenna_orientation='%s', channel='%d', sponsor='%s', state='%s', mode='%s', comments='%s', nid='%d' WHERE rid='%d'",
                 time(), $radio["title"], $radio["ssid"], $radio["lid"], $radio["protocol"], $radio["mid"], $radio["ip"], $radio["hosts"], $radio["mac"], $radio["int_mac"], $radio["firmware"], $radio["antenna_type"], $radio["antenna_gain"], $radio["antenna_orientation"], $radio["channel"], $radio["sponsor"], $radio["state"], $radio["mode"], $radio["comments"], $radio["nid"], $radio["rid"]); 
        
       $message = t("Radio") ." '" .$radio["title"] ."' " .t("has been updated");
       watchdog('special', t('%type: updated %title.', array('%type' => '<em>wifi radio</em>', '%title' => "<em>wifi radio</em>")), l(t('view'), 'node/'. $radio["nid"]));

  } else {
       $radio["rid"] = db_next_id('wifi_radio_id');
       db_query("INSERT into {wifi_radio}(rid, created, changed, title, ssid, lid, protocol, mid, ip, hosts, mac, int_mac, firmware, antenna_type, antenna_gain, antenna_orientation, channel, sponsor, state, mode, comments, nid) values ('%d','%d','%d','%s','%s','%d','%s','%d','%s','%s','%s','%s','%s','%s','%d','%s','%d','%s','%s','%s',\"%s\",'%d')",
                   $radio["rid"], time(), time(), $radio["title"], $radio["ssid"], $radio["lid"], $radio["protocol"], $radio["mid"], $radio["ip"], $radio["hosts"], $radio["mac"], $radio["int_mac"], $radio["firmware"], $radio["antenna_type"], $radio["antenna_gain"], $radio["antenna_orientation"], $radio["channel"], $radio["sponsor"], $radio["state"], $radio["mode"], $radio["comments"], $radio["nid"]); 
       $message = t("Radio") ." '" .$radio["title"] ."' " .t("has been inserted");
       watchdog('special', t('%type: new  %title.', array('%type' => '<em>wifi radio</em>', '%title' => "<em>wifi radio</em>")), l(t('view'), 'node/'. $radio["nid"]));
 }
 drupal_set_message($message);
 $output = wifi_radio_details($radio["rid"]);
 load_pwpwm_nodes(0);
 cache_clear_all();

 return $output;
}


function wifi_links_page() {
  $op = $_POST['op'] ? $_POST['op'] : arg(1);
  $edit = $_POST['edit'];

  $node = node_load(array('nid' => $op));
  print theme('page', wifi_list_links($op), $node->title);
}

function wifi_link_form($cid = 0, $nid = 0, $rid = 0) {
  if ($cid > 0) {
    $cidquery = db_query("SELECT * FROM {wifi_link} where cid = '%d'",$cid);
    if (db_num_rows($cidquery == 0)) {
	$output = t("Link does not exist");
        return $output;
    }
    $link = db_fetch_array($cidquery);
  }

  $querynid = db_query("SELECT rid, title, r.nid FROM {wifi_location} l, {wifi_radio} r WHERE r.nid=l.nid");
  while ($rownid = db_fetch_array($querynid)) {
     foreach (taxonomy_node_get_terms_by_vocabulary($rownid["nid"],variable_get('wifi_vocabulary',0)) as $term) {
       $location = array();
       foreach (taxonomy_get_parents($term->tid) as $parent) {
                $location[] .= $parent->name;
       }
       $location[] = $term->name;
       $nids_array[$rownid["rid"]] = implode($location,', ') .", " .$rownid["title"];
       if (($nid>0) && ($cid == 0)){
	 $link["rid1"] = $rownid["rid"];
	 $link["rid2"] = $rownid["rid"];
       }
       if (($rid>0) && ($cid == 0) && ($nid == 0)){
	 $link["rid1"] = $rid;
	 $link["rid2"] = $rid;
       }
     }
  }
  asort($nids_array);
  $state_types = array('Planned' => t('Planned'),
                        'Working' => t('Working'),
                        'Dropped' => t('Dropped'));

  $output = "<form method=get action=\"/wifi/links/update\" name=\"link\">";
  $output .= form_select(t('From'), 'rid1', $link["rid1"], $nids_array, NULL);
//  if ($cid == 0)
    $output .= form_select(t("Used IP's"), "dummy", 0, _wifi_get_ip_list('link'), t("List of all used IP. Helps you finding the next."));
  $output .= form_textfield(t("IP"), "ip1", $link["ip1"], 20, 20, ($error['ip'] ? $error["ip"] : ''));
  $output .= form_select(t('To'), 'rid2', $link["rid2"], $nids_array, NULL);
  $output .= form_textfield(t("IP"), "ip2", $link["ip2"], 20, 20, ($error['ip'] ? $error["ip"] : ''));
  $output .= form_select(t('Hosts'), 'hosts', $link["hosts"], drupal_map_assoc(array( '2',  '6', '14', '30', '62', '126', '254')), NULL);
  $output .= form_select(t('Type'), 'link_type', $link["link_type"], drupal_map_assoc(array('AP/Client', 'Bridge', 'WDS', 'Cable - same subnet', 'Cable - vlan2', 'Cable - vlan3', 'Cable - vlan4', 'Tunnel')), NULL);
  $output .= form_select(t('Status'), 'state', $link["state"], $state_types, t('Current state of this link.'));
  
  $output .= form_hidden("cid",$cid);
  if ($cid) 
    $taction = t("Save changes");
  else 
    $taction = t("Send");
  $output .= form_button($taction,'submit');
 return "</form>" .$output;
}

function wifi_link_update($link) {
  global $user;
  if (!(user_access('edit wifi database'))) {
    drupal_access_denied();
    return;
  }
 
  $query = db_query("SELECT r.nid,nick from {wifi_radio} r, {wifi_location} l WHERE l.nid=r.nid AND rid='%d'",$link["rid1"]);
  $node1 =  db_fetch_array($query);
  $query = db_query("SELECT r.nid,nick from {wifi_radio} r, {wifi_location} l WHERE l.nid=r.nid AND rid='%d'",$link["rid2"]);
  $node2 =  db_fetch_array($query);

  if ($link["cid"]) {
       db_query("UPDATE {wifi_link} SET changed='%d', ip1='%s', rid1='%d', ip2='%s', rid2='%d', hosts='%s', link_type='%s', state='%s' WHERE cid='%d'",
                   time(), $link["ip1"], $link["rid1"], $link["ip2"], $link["rid2"], $link["hosts"], $link["link_type"], $link["state"],$link["cid"]); 
        
       $message = t("Link") ." '" .$link["cid"] ."' " .$node1["nick"] ." / " .$node2["nick"] ." " .t("has been updated");
       watchdog('special', t('%type: updated %title.', array('%type' => '<em>wifi link</em>', '%title' => "<em>wifi link</em>")), l(t('view'), 'node/'. $link["nid"]));

  } else {
       $link["cid"] = db_next_id('wifi_link_id');
       db_query("INSERT into {wifi_link}(cid, created, changed, ip1, rid1, ip2, rid2, hosts, link_type, state, uid) VALUES ('%d','%d','%d','%s','%d','%s','%d','%d','%s','%s','%d')",
                   $link["cid"], time(), time(), $link["ip1"], $link["rid1"], $link["ip2"], $link["rid2"], $link["hosts"], $link["link_type"], $link["state"],$user); 
       $message = t("Link") ." '" .$link["cid"] ."' " .$node1["nick"] ." / " .$node2["nick"] ." " .t("has been inserted");
       watchdog('special', t('%type: new  %title.', array('%type' => '<em>wifi link</em>', '%title' => "<em>wifi link</em>")), l(t('view'), 'node/'. $link["nid"]));
 }
 drupal_set_message($message);
 $output = wifi_list_links($node1["nid"]);
 cache_clear_all();

 return $output;
}

function _wifi_get_ip_list($type='radio', $tid = 0) {
   $array_ip = array();
   if ($type == 'link')
     $qipes = db_query("SELECT ip1 ip FROM {wifi_link} WHERE ip1 like '172.25.%'");
   else
     $qipes = db_query("SELECT ip FROM {wifi_radio} WHERE ip like '10.138.%'");
   $count = 0;
   while ($ip = db_fetch_array($qipes)) {
       $ar = explode('.',$ip["ip"]);
       $array_ip[$count] = $ar;
       $count++;
   }
   arsort($array_ip);
   reset($array_ip);
   foreach ($array_ip as $elem) {
      $ip = implode('.',$elem);

      // if radios, location
      $loc_tid = 0;
      if ($type == 'radio') {
        $query = db_query("SELECT nid, rid, title, state FROM {wifi_radio} WHERE ip = '%s'",$ip);
        $row = db_fetch_array($query);
        foreach (taxonomy_node_get_terms_by_vocabulary($row["nid"],variable_get('wifi_vocabulary',0)) as $term) {
          $location = $term->name;
          if ($loc_tid == 0)
             $loc_tid = $term->tid;
          foreach (taxonomy_get_parents($term->tid) as $parent) {
             $location .= ", " .$parent->name;
          }
        }
	if (($tid == 0) or ($tid == $loc_tid))
            $list[] .= $ip ." - " .$location;
      } // if type == radio
      else
        $list[] .=  $ip;
   }
   return $list;
}

function wifi_link_add() {
  $output =  wifi_link_form(0,arg(1));
  return print theme('page','<div id=wifi>' .$output .'</div>');
}

function wifi_radio_add() {
  $output =  wifi_radio_form(0,arg(1));
  return print theme('page','<div id=wifi>' .$output .'</div>');
}


include_once "unsolclic.php";

function wifi_unsolclic($radio) {
    print singleclick($radio);
}

function wifi_cron() {
  $query = db_query("SELECT * FROM {node} l WHERE type='wifi' AND changed > '%d'",variable_get('wifi_phpwmload_cron_last', 1));
  if (db_num_rows($query)) {
        variable_set('wifi_phpwmload_cron_last', time());
        load_pwpwm_nodes(0);
  }
}

?>
